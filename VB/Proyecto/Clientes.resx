<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Imprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        We8BHikAAAAASUVORK5CYII=
</value>
  </data>
</root>